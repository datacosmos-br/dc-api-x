[flake8]
# Base flake8 configuration:
max-line-length = 88
select = WPS
ignore = 
    # Allow f-strings
    WPS305,
    WPS306,
    # Allow docstrings without imperative mood
    WPS326,
    # Allow long argument names for readability
    WPS110,
    # Allow exception without suffix
    WPS202

# Integration with ruff:
extend-ignore = E203,W503

# wemake-python-styleguide settings:
max-complexity = 10
max-imports = 15
max-module-members = 15
max-methods = 10
max-local-variables = 8
max-arguments = 5
max-attributes = 8
max-cognitive-complexity = 15
max-cognitive-score = 20
max-line-complexity = 20
max-try-body-length = 8

# Per-file ignores
per-file-ignores =
    # Allow magic values in test files
    tests/*:PLR2004,ARG002
    # Allow unused arguments in __init__.py
    __init__.py:ARG002
    # Allow unused method arguments in client implementations
    src/dc_api_x/client.py:ARG002
    src/dc_api_x/plugins/base.py:ARG002
    src/dc_api_x/ext/hooks.py:ARG002
    # Ignore docstring issues in test files
    tests/*:D,DAR
    # Ignore specific error types in specific files
    src/dc_api_x/models.py:WPS220,WPS221
    # Ignore long functions in specific files
    src/dc_api_x/utils/*.py:WPS211,WPS210

# docstring options
docstring-convention = google

[mypy]
python_version = 3.10
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
# Install stubs for 3rd party libraries
plugins = pydantic.mypy

# Per-module options for 3rd party libs
[mypy.plugins.pydantic.mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_functions = test_*
python_classes = Test* 
addopts = 
    --verbose
    --tb=short
    --color=yes
    --doctest-modules
    --junitxml=junit/test-results.xml
    --cov=src
    --cov-report=xml
    --cov-report=term

# Disable warnings during test execution
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning 
